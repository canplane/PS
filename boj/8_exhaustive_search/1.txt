#include <cstdio>
#include <deque>
#include <utility>
#define INF 0x7fffffff
using namespace std;

int map[100][100], dist[100][100], N, M;
int dy[4] = { -1, 1, 0, 0 }, dx[4] = { 0, 0, -1, 1 };

int bfs_01() {
	for (int i = 0; i < N; i++)
		for (int j = 0; j < M; j++)
			dist[i][j] = INF;

	deque<pair<int, int>> deq;
	deq.push_front({ 0, 0 }), dist[0][0] = 0;

	while (!deq.empty()) {
		auto [y, x] = deq.front();
		deq.pop_front();
		if (y == N - 1 && x == M - 1)
			break;
		for (int i = 0; i < 4; i++) {
			int ny = y + dy[i], nx = x + dx[i];
			if (ny < 0 || ny >= N || nx < 0 || nx >= M)
				continue;
			if (dist[y][x] + map[ny][nx] < dist[ny][nx]) {
				dist[ny][nx] = dist[y][x] + map[ny][nx];
				if (map[ny][nx])
					deq.push_back({ ny, nx });
				else
					deq.push_front({ ny, nx });
			}
		}
	}
	return dist[N - 1][M - 1];
}

int main() {
	scanf("%d %d", &M, &N);
	for (int i = 0; i < N; i++)
		for (int j = 0; j < M; j++)
			scanf("%1d", &map[i][j]);
	printf("%d", bfs_01());
}
